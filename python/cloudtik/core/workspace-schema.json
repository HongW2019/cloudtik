{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "http://github.com/Intel-bigdata/cloudtik/python/cloudtick/core/workspace-schema.json",
	"title": "CloudTik",
	"description": "CloudTik workspace config schema",
	"type": "object",
	"definitions": {
        "commands": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "shell command"
            }
        }
    },
    "required": [
        "workspace_name",
        "provider"
    ],
    "additionalProperties": false,
	"properties": {
        "workspace_name": {
            "description": "A unique identifier for the workspace.",
            "type": "string"
        },
        "provider": {
            "type": "object",
            "description": "Cloud-provider specific configuration.",
            "required": [ "type" ],
            "additionalProperties": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "e.g. aws, azure, gcp,..."
                },
                "region": { 
                    "type": "string",
                    "description": "e.g. us-east-1"
                },
                "module": {
                    "type": "string",
                    "description": "module, if using external node provider"
                },
                "use_internal_ips": {
                    "type": "boolean",
                    "description": "don't require public ips"
                },
                "namespace": {
                    "type": "string",
                    "description": "k8s namespace, if using k8s"
                },
                "location": {
                    "type": "string",
                    "description": "Azure location"
                },
                "resource_group": {
                    "type": "string",
                    "description": "Azure resource group"
                },
                "tags": {
                    "type": "object",
                    "description": "Azure user-defined tags"
                },
                "subscription_id": {
                    "type": "string",
                    "description": "Azure subscription id"
                },
                "msi_identity_id": {
                    "type": "string",
                    "description": "User-defined managed identity (generated by config)"
                },
                "msi_identity_principal_id": {
                    "type": "string",
                    "description": "User-defined managed identity principal id (generated by config)"
                },
                "subnet_id": {
                    "type": "string",
                    "description": "Network subnet id"
                },
                "scaler_service_account": {
                    "type": "object",
                    "description": "k8s cluster scaler permissions, if using k8s"
                },
                "scaler_role": {
                    "type": "object",
                    "description": "k8s cluster scaler permissions, if using k8s"
                },
                "scaler_role_binding": {
                    "type": "object",
                    "description": "k8s cluster scaler permissions, if using k8s"
                },
                "availability_zone": {
                    "type": "string",
                    "description": "GCP availability zone"
                },
                "project_id": {
                    "type": ["string", "null"],
                    "description": "GCP globally unique project id"
                },
                "security_group": {
                    "type": "object",
                    "description": "AWS security group",
                    "additionalProperties": false,
                    "properties": {
                      "GroupName": {
                        "type": "string",
                        "description": "Security group name"
                      },
                      "IpPermissions": {
                        "type": "array",
                        "description": "Security group in bound rules"
                      }
                    }
                },
				"disable_node_updaters": {
					"type": "boolean",
					"description": "Disables node updaters if set to True. Default is False. (For Kubernetes operator usage.)"
				},
                "gcp_credentials": {
                    "type": "object",
                    "description": "Credentials for authenticating with the GCP client",
                    "required": [ "type" ],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": ["credentials_token", "service_account"],
                            "description": "Credentials type: either temporary OAuth 2.0 token or permanent service account credentials blob."
                        },
                        "credentials": {
                            "type": "string",
                            "description": "Oauth token or JSON string constituting service account credentials"
                        }
                    }
                },
                "gcp_cloud_storage": {
                    "type": "object",
                    "description": "use google cloud storage",
                    "additionalProperties": false,
                    "properties": {
                        "gcp.gcs.bucket": {
                            "type": "string",
                            "description": "gcp cloud storage bucket name"
                        },
                        "fs.gs.auth.service.account.email": {
                            "type": "string",
                            "description": "gcp service account email"
                        },
                        "fs.gs.auth.service.account.private.key.id": {
                            "type": "string",
                            "description": "gcp service account private key id"
                        },
                        "fs.gs.auth.service.account.private.key": {
                            "type": "string",
                            "description": "gcp service account private key"
                        }
                    }
                },
                "azure_cloud_storage": {
                    "type": "object",
                    "description": "use azure cloud storage",
                    "additionalProperties": false,
                    "properties": {
                      "azure.storage.account": {
                        "type": "string",
                        "description": "azure storage account name"
                      },
                      "azure.container": {
                        "type": "string",
                        "description": "azure container name"
                      },
                      "azure.account.key": {
                        "type": "string",
                        "description": "azure storage account access key"
                      }
                    }
                },
                "aws_s3a_storage": {
                    "type": "object",
                    "description": "use  s3a",
                    "additionalProperties": false,
                    "properties": {
                      "s3.bucket": {
                        "type": "string",
                        "description": "the s3 bucket name"
                      },
                      "fs.s3a.access.key": {
                        "type": "string",
                        "description": "access key of s3a"
                      },
                      "fs.s3a.secret.key": {
                        "type": "string",
                        "description": "secret key of s3a"
                      }
                    }
                }
            }
        },
        "auth": {
            "type": "object",
            "description": "How will authenticate with newly launched nodes.",
            "additionalProperties": false,
            "properties": {
                "ssh_user": {
                    "type": "string",
                    "default": "ubuntu"
                },
                "ssh_public_key": { 
                    "type": "string"
                },
                "ssh_private_key": { 
                    "type": "string"
                },
                "ssh_proxy_command": {
                    "description": "A value for ProxyCommand ssh option, for connecting through proxies. Example: nc -x proxy.example.com:1234 %h %p",
                    "type": "string"
                }
            }
        }
    }
}
